version: "3.8"
services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "80:80"
    volumes:
      - ./nginx/status.conf:/etc/nginx/conf.d/status.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app

  # prometheus-nginx-exporter:
  #   build: ./prometheus-nginx-exporter
  #   container_name: prometheus-nginx-exporter
  #   command: --target.host=nginx
  #   ports:
  #     - "9150:9150"
  #   depends_on:
  #     - nginx
  #   networks:
  #     - app

  nginx-exporter-prometheus:
    image: nginx/nginx-prometheus-exporter:1.0.0
    container_name: nginx-exporter-prometheus
    restart: unless-stopped
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    command:
      - '-nginx.scrape-uri=http://localhost:8080/status'
    networks:
      - app

  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.listen-address=0.0.0.0:9090' 
    networks:
      - app

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=123456
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana-data:/var/lib/grafana
    networks:
      - app

  fluentd:
    build: ./fluentd
    container_name: fluentd
    user: root
    restart: unless-stopped
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
    ports:
      - "24231:24231"
      - "24231:24231/udp"
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  prometheus-data: {}
  grafana-data: {}